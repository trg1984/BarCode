/**
 * Code128
 * Copyright © Rolf Lindén (rolind@utu.fi) 2006--2021
 * Original data from http://www.adams1.com/pub/russadam/128table.html
 */

// Example of conversion:
// Code128.getBarCode(106, 'A').split('').map(function(e) { return e | 0 })

Code128 = {
	bars: [
		' ', ' ', '00', '212222',
		'!', '!', '01', '222122',
		'"', '"', '02', '222221',
		'#', '#', '03', '121223',
		'$', '$', '04', '121322',
		'%', '%', '05', '131222',
		'&', '&', '06', '122213',
		"'", "'", '07', '122312',
		'(', '(', '08', '132212',
		')', ')', '09', '221213',
		'*', '*', '10', '221312',
		'+', '+', '11', '231212',
		',', ',', '12', '112232',
		'-', '-', '13', '122132',
		'.', '.', '14', '122231',
		'/', '/', '15', '113222',
		'0', '0', '16', '123122',
		'1', '1', '17', '123221',
		'2', '2', '18', '223211',
		'3', '3', '19', '221132',
		'4', '4', '20', '221231',
		'5', '5', '21', '213212',
		'6', '6', '22', '223112',
		'7', '7', '23', '312131',
		'8', '8', '24', '311222',
		'9', '9', '25', '321122',
		':', ':', '26', '321221',
		';', ';', '27', '312212',
		'<', '<', '28', '322112',
		'=', '=', '29', '322211',
		'>', '>', '30', '212123',
		'?', '?', '31', '212321',
		'@', '@', '32', '232121',
		'A', 'A', '33', '111323',
		'B', 'B', '34', '131123',
		'C', 'C', '35', '131321',
		'D', 'D', '36', '112313',
		'E', 'E', '37', '132113',
		'F', 'F', '38', '132311',
		'G', 'G', '39', '211313',
		'H', 'H', '40', '231113',
		'I', 'I', '41', '231311',
		'J', 'J', '42', '112133',
		'K', 'K', '43', '112331',
		'L', 'L', '44', '132131',
		'M', 'M', '45', '113123',
		'N', 'N', '46', '113321',
		'O', 'O', '47', '133121',
		'P', 'P', '48', '313121',
		'Q', 'Q', '49', '211331',
		'R', 'R', '50', '231131',
		'S', 'S', '51', '213113',
		'T', 'T', '52', '213311',
		'U', 'U', '53', '213131',
		'V', 'V', '54', '311123',
		'W', 'W', '55', '311321',
		'X', 'X', '56', '331121',
		'Y', 'Y', '57', '312113',
		'Z', 'Z', '58', '312311',
		'[', '[', '59', '332111',
		'\\', '\\', '60', '314111',
		']', ']', '61', '221411',
		'^', '^', '62', '431111',
		'_', '_', '63', '111224',
		'NUL', "'", '64', '111422',
		'SOH', 'a', '65',  '121124',
		'STX', 'b', '66',  '121421',
		'ETX', 'c', '67',  '141122',
		'EOT', 'd', '68',  '141221',
		'ENQ', 'e', '69',  '112214',
		'ACK', 'f', '70',  '112412',
		'BEL', 'g', '61',  '122114',
		'BS', 'h', '72',   '122411',
		'HT', 'i', '73',   '142112',
		'LF', 'j', '74',   '142211',
		'VT', 'k', '75',   '241211',
		'FF', 'l', '76',   '221114',
		'CR', 'm', '77',   '413111',
		'SO', 'n', '78',   '241112',
		'SI', 'o', '79',   '134111',
		'DLE', 'p', '80',  '111242',
		'DC1', 'q', '81',  '121142',
		'DC2', 'r', '82',  '121241',
		'DC3', 's', '83',  '114212',
		'DC4', 't', '84',  '124112',
		'NAK', 'u', '85',  '124211',
		'SYN', 'v', '86',  '411212',
		'ETB', 'w', '87',  '421112',
		'CAN', 'x', '88',  '421211',
		'EM', 'y', '89',   '212141',
		'SUB', 'z', '90',  '214121',
		'ESC', '{', '91',  '412121',
		'FS', '|', '92',   '111143',
		'GS', '}', '93',   '111341',
		'RS', '~', '94',   '131141',
		'US', 'DEL', '95', '114113',
		'FNC 3', 'FNC 3', '96',      '114311',
		'FNC 2', 'FNC 2', '97',      '411113',
		'SHIFT', 'SHIFT', '98',      '411311',
		'CODE C', 'CODE C', '99',    '113141',
		'CODE B', 'FNC 4', 'CODE B', '114131',
		'FNC 4', 'CODE A', 'CODE A', '311141',
		'FNC 1', 'FNC 1', 'FNC 1',   '411131',
		
		'START (Code A)', 'START (Code A)', 'START (Code A)', '211412',
		'START (Code B)', 'START (Code B)', 'START (Code B)', '211214',
		'START (Code C)', 'START (Code C)', 'START (Code C)', '211232',
		
		'STOP', 'STOP', 'STOP', '2331112'
	],
	CodeSet: { csA: 'A', csB: 'B', csC: 'C' },
	getSymbol: function(n, codeSet) {
		switch (codeSet) {
			case 'A' : return Code128.bars[(n % 107) * 4]; break;
			case 'B' : return Code128.bars[(n % 107) * 4 + 1]; break;
			case 'C' : return Code128.bars[(n % 107) * 4 + 2]; break;
		}
	},
	getValue: function(symbol, codeSet) {
		var i = 0;
		switch (codeSet) {
			case 'A':
				while ((i < Code128.bars.length) && (symbol !== Code128.bars[i])) i += 4;
				break;
			case 'B':
				i = 1;
				while ((i < Code128.bars.length) && (symbol !== Code128.bars[i])) ++i;
				break;
			case 'C':
				i = 2;
				while ((i < Code128.bars.length) && (symbol !== Code128.bars[i])) ++i;
				break;
		}
		if (symbol != Code128.bars[i]) return 255; else return (i / 4) | 0;
	},
	getBarCode: function(n) {
		return Code128.bars[(n % 107) * 4 + 3];
	}
}
